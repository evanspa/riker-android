package com.rikerapp.riker.model;

import android.support.annotation.IdRes;
import android.support.annotation.StringRes;

import com.rikerapp.riker.ChartUtils;
import com.rikerapp.riker.Function;
import com.rikerapp.riker.R;
import com.rikerapp.riker.Utils;
import com.rikerapp.riker.formatter.YAxisNumberFormatter;
import com.rikerapp.riker.formatter.YAxisPercentageFormatter;
import com.rikerapp.riker.sql.columns.BmlColumn;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import static com.rikerapp.riker.ChartUtils.NO_RES_ID;

public enum Chart {

    /**
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     *    Weight Lifted Charts
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     */

    /**
     * *********************************************************************************************
     * Total Weight Lifted Charts
     * *********************************************************************************************
     */
    TOTAL_WEIGHT_LIFTED_TOTAL("wltc-0",
            R.string.total_weight_lifted_title,
            NO_RES_ID,
            R.string.total_weight_lifted_total_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.timeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.singleValueColor,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.totalChartContainer, // list-page container res id
            1), // normally we'd try to have the loader-id sorta match with the chart id, but for 0 we can't, because 0 is used by a different, non-chart loader
    TOTAL_WEIGHT_LIFTED_BODY_SEGMENTS("wltc-1",
            R.string.total_weight_lifted_title,
            R.string.body_segments_sub_title,
            R.string.total_weight_lifted_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer, // list-page container res id
            2),
    TOTAL_WEIGHT_LIFTED_ALL_MGS("wltc-2",
            R.string.total_weight_lifted_title,
            R.string.all_mgs_sub_title,
            R.string.total_weight_lifted_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            R.id.totalContainer, // dashboard-page container res id
            R.id.allMgsChartContainer, // list-page container res id
            3),
    TOTAL_WEIGHT_LIFTED_UPPER_BODY("wltc-4", // in iOS, for impl reason, wltc-3 is used for the section heading view
            R.string.total_weight_lifted_title,
            R.string.upper_body_sub_title,
            R.string.total_weight_lifted_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer, // list-page container res id
            4), // so here, we're on track now with our loader ids aligning with the chart-id
    TOTAL_WEIGHT_LIFTED_SHOULDERS("wltc-5",
            R.string.total_weight_lifted_title,
            R.string.shoulders_sub_title,
            R.string.total_weight_lifted_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            5),
    TOTAL_WEIGHT_LIFTED_CHEST("wltc-6",
            R.string.total_weight_lifted_title,
            R.string.chest_sub_title,
            R.string.total_weight_lifted_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            6),
    TOTAL_WEIGHT_LIFTED_BACK("wltc-7",
            R.string.total_weight_lifted_title,
            R.string.back_sub_title,
            R.string.total_weight_lifted_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            7),
    TOTAL_WEIGHT_LIFTED_BICEPS("wltc-8",
            R.string.total_weight_lifted_title,
            R.string.biceps_sub_title,
            R.string.total_weight_lifted_biceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBicepsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsChartContainer,
            8),
    TOTAL_WEIGHT_LIFTED_TRICEPS("wltc-9",
            R.string.total_weight_lifted_title,
            R.string.triceps_sub_title,
            R.string.total_weight_lifted_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            9),
    TOTAL_WEIGHT_LIFTED_FOREARMS("wltc-10",
            R.string.total_weight_lifted_title,
            R.string.forearms_sub_title,
            R.string.total_weight_lifted_forearms_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byForearmsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.FOREARMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsChartContainer,
            10),
    TOTAL_WEIGHT_LIFTED_CORE("wltc-11",
            R.string.total_weight_lifted_title,
            R.string.core_sub_title,
            R.string.total_weight_lifted_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            11),
    TOTAL_WEIGHT_LIFTED_LOWER_BODY("wltc-12",
            R.string.total_weight_lifted_title,
            R.string.lower_body_sub_title,
            R.string.total_weight_lifted_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            12),
    TOTAL_WEIGHT_LIFTED_QUADS("wltc-13",
            R.string.total_weight_lifted_title,
            R.string.quads_sub_title,
            R.string.total_weight_lifted_quads_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byQuadsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.QUADS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsChartContainer,
            13),
    TOTAL_WEIGHT_LIFTED_HAMS("wltc-14",
            R.string.total_weight_lifted_title,
            R.string.hamstrings_sub_title,
            R.string.total_weight_lifted_hamstrings_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHamstringsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HAMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsChartContainer,
            14),
    TOTAL_WEIGHT_LIFTED_CALFS("wltc-15",
            R.string.total_weight_lifted_title,
            R.string.calfs_sub_title,
            R.string.total_weight_lifted_calfs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCalfsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CALF.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsChartContainer,
            15),
    TOTAL_WEIGHT_LIFTED_GLUTES("wltc-16",
            R.string.total_weight_lifted_title,
            R.string.glutes_sub_title,
            R.string.total_weight_lifted_glutes_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byGlutesMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.GLUTES.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesChartContainer,
            16),
    TOTAL_WEIGHT_LIFTED_HIP_ABDUCTORS("wltc-17",
            R.string.total_weight_lifted_title,
            R.string.hip_abductors_sub_title,
            R.string.total_weight_lifted_hip_abductors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipAbductorsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_ABDUCTORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsChartContainer,
            17),
    TOTAL_WEIGHT_LIFTED_HIP_FLEXORS("wltc-18",
            R.string.total_weight_lifted_title,
            R.string.hip_flexors_sub_title,
            R.string.total_weight_lifted_hip_flexors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipFlexorsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_FLEXORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsChartContainer,
            18),
    TOTAL_WEIGHT_LIFTED_ALL_MGS_MV("wltc-19",
            R.string.total_weight_lifted_title,
            R.string.all_mgs_mv_sub_title,
            R.string.total_weight_lifted_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            19),
    TOTAL_WEIGHT_LIFTED_UPPER_BODY_MV("wltc-20",
            R.string.total_weight_lifted_title,
            R.string.upper_body_mv_sub_title,
            R.string.total_weight_lifted_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            20),
    TOTAL_WEIGHT_LIFTED_SHOULDERS_MV("wltc-21",
            R.string.total_weight_lifted_title,
            R.string.shoulders_mv_sub_title,
            R.string.total_weight_lifted_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            21),
    TOTAL_WEIGHT_LIFTED_CHEST_MV("wltc-22",
            R.string.total_weight_lifted_title,
            R.string.chest_mv_sub_title,
            R.string.total_weight_lifted_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            22),
    TOTAL_WEIGHT_LIFTED_BACK_MV("wltc-23",
            R.string.total_weight_lifted_title,
            R.string.back_mv_sub_title,
            R.string.total_weight_lifted_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            23),
    TOTAL_WEIGHT_LIFTED_BICEPS_MV("wltc-24",
            R.string.total_weight_lifted_title,
            R.string.biceps_mv_sub_title,
            R.string.total_weight_lifted_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            24),
    TOTAL_WEIGHT_LIFTED_TRICEPS_MV("wltc-25",
            R.string.total_weight_lifted_title,
            R.string.triceps_mv_sub_title,
            R.string.total_weight_lifted_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            25),
    TOTAL_WEIGHT_LIFTED_FOREARMS_MV("wltc-26",
            R.string.total_weight_lifted_title,
            R.string.forearms_mv_sub_title,
            R.string.total_weight_lifted_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            26),
    TOTAL_WEIGHT_LIFTED_CORE_MV("wltc-27",
            R.string.total_weight_lifted_title,
            R.string.core_mv_sub_title,
            R.string.total_weight_lifted_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            27),
    TOTAL_WEIGHT_LIFTED_LOWER_BODY_MV("wltc-28",
            R.string.total_weight_lifted_title,
            R.string.lower_body_mv_sub_title,
            R.string.total_weight_lifted_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            28),
    TOTAL_WEIGHT_LIFTED_QUADS_MV("wltc-29",
            R.string.total_weight_lifted_title,
            R.string.quads_mv_sub_title,
            R.string.total_weight_lifted_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            29),
    TOTAL_WEIGHT_LIFTED_HAMS_MV("wltc-30",
            R.string.total_weight_lifted_title,
            R.string.hamstrings_mv_sub_title,
            R.string.total_weight_lifted_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            30),
    TOTAL_WEIGHT_LIFTED_CALFS_MV("wltc-31",
            R.string.total_weight_lifted_title,
            R.string.calfs_mv_sub_title,
            R.string.total_weight_lifted_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            31),
    TOTAL_WEIGHT_LIFTED_GLUTES_MV("wltc-32",
            R.string.total_weight_lifted_title,
            R.string.glutes_mv_sub_title,
            R.string.total_weight_lifted_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            32),
    TOTAL_WEIGHT_LIFTED_HIP_ABDUCTORS_MV("wltc-33",
            R.string.total_weight_lifted_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.total_weight_lifted_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            33),
    TOTAL_WEIGHT_LIFTED_HIP_FLEXORS_MV("wltc-34",
            R.string.total_weight_lifted_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.total_weight_lifted_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            34),
    /**
     * *********************************************************************************************
     * Average Weight Lifted Charts
     * *********************************************************************************************
     */
    AVG_WEIGHT_LIFTED_TOTAL("avg-wltc-0",
            R.string.avg_weight_lifted_title,
            NO_RES_ID,
            R.string.avg_weight_lifted_avg_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.timeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.singleValueColor,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.totalChartContainer, // list-page container res id
            100),
    AVG_WEIGHT_LIFTED_BODY_SEGMENTS("avg-wltc-1",
            R.string.avg_weight_lifted_title,
            R.string.body_segments_sub_title,
            R.string.avg_weight_lifted_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            101),
    AVG_WEIGHT_LIFTED_ALL_MGS("avg-wltc-2",
            R.string.avg_weight_lifted_title,
            R.string.all_mgs_sub_title,
            R.string.avg_weight_lifted_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            R.id.avgContainer,
            R.id.allMgsChartContainer,
            102),
    AVG_WEIGHT_LIFTED_UPPER_BODY("avg-wltc-4", // in iOS, for impl reason, wltc-3 is used for the section heading view
            R.string.avg_weight_lifted_title,
            R.string.upper_body_sub_title,
            R.string.avg_weight_lifted_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            104),
    AVG_WEIGHT_LIFTED_SHOULDERS("avg-wltc-5",
            R.string.avg_weight_lifted_title,
            R.string.shoulders_sub_title,
            R.string.avg_weight_lifted_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            105),
    AVG_WEIGHT_LIFTED_CHEST("avg-wltc-6",
            R.string.avg_weight_lifted_title,
            R.string.chest_sub_title,
            R.string.avg_weight_lifted_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            106),
    AVG_WEIGHT_LIFTED_BACK("avg-wltc-7",
            R.string.avg_weight_lifted_title,
            R.string.back_sub_title,
            R.string.avg_weight_lifted_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            107),
    AVG_WEIGHT_LIFTED_BICEPS("avg-wltc-8",
            R.string.avg_weight_lifted_title,
            R.string.biceps_sub_title,
            R.string.avg_weight_lifted_biceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBicepsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsChartContainer,
            108),
    AVG_WEIGHT_LIFTED_TRICEPS("avg-wltc-9",
            R.string.avg_weight_lifted_title,
            R.string.triceps_sub_title,
            R.string.avg_weight_lifted_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            109),
    AVG_WEIGHT_LIFTED_FOREARMS("avg-wltc-10",
            R.string.avg_weight_lifted_title,
            R.string.forearms_sub_title,
            R.string.avg_weight_lifted_forearms_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byForearmsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.FOREARMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsChartContainer,
            110),
    AVG_WEIGHT_LIFTED_CORE("avg-wltc-11",
            R.string.avg_weight_lifted_title,
            R.string.core_sub_title,
            R.string.avg_weight_lifted_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            111),
    AVG_WEIGHT_LIFTED_LOWER_BODY("avg-wltc-12",
            R.string.avg_weight_lifted_title,
            R.string.lower_body_sub_title,
            R.string.avg_weight_lifted_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            112),
    AVG_WEIGHT_LIFTED_QUADS("avg-wltc-13",
            R.string.avg_weight_lifted_title,
            R.string.quads_sub_title,
            R.string.avg_weight_lifted_quads_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byQuadsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.QUADS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsChartContainer,
            113),
    AVG_WEIGHT_LIFTED_HAMS("avg-wltc-14",
            R.string.avg_weight_lifted_title,
            R.string.hamstrings_sub_title,
            R.string.avg_weight_lifted_hamstrings_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHamstringsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HAMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsChartContainer,
            114),
    AVG_WEIGHT_LIFTED_CALFS("avg-wltc-15",
            R.string.avg_weight_lifted_title,
            R.string.calfs_sub_title,
            R.string.avg_weight_lifted_calfs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCalfsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CALF.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsChartContainer,
            115),
    AVG_WEIGHT_LIFTED_GLUTES("avg-wltc-16",
            R.string.avg_weight_lifted_title,
            R.string.glutes_sub_title,
            R.string.avg_weight_lifted_glutes_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byGlutesMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.GLUTES.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesChartContainer,
            116),
    AVG_WEIGHT_LIFTED_HIP_ABDUCTORS("avg-wltc-17",
            R.string.avg_weight_lifted_title,
            R.string.hip_abductors_sub_title,
            R.string.avg_weight_lifted_hip_abductors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipAbductorsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_ABDUCTORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsChartContainer,
            117),
    AVG_WEIGHT_LIFTED_HIP_FLEXORS("avg-wltc-18",
            R.string.avg_weight_lifted_title,
            R.string.hip_flexors_sub_title,
            R.string.avg_weight_lifted_hip_flexors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipFlexorsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_FLEXORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsChartContainer,
            118),
    AVG_WEIGHT_LIFTED_ALL_MGS_MV("avg-wltc-19",
            R.string.avg_weight_lifted_title,
            R.string.all_mgs_mv_sub_title,
            R.string.avg_weight_lifted_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            119),
    AVG_WEIGHT_LIFTED_UPPER_BODY_MV("avg-wltc-20",
            R.string.avg_weight_lifted_title,
            R.string.upper_body_mv_sub_title,
            R.string.avg_weight_lifted_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            120),
    AVG_WEIGHT_LIFTED_SHOULDERS_MV("avg-wltc-21",
            R.string.avg_weight_lifted_title,
            R.string.shoulders_mv_sub_title,
            R.string.avg_weight_lifted_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            121),
    AVG_WEIGHT_LIFTED_CHEST_MV("avg-wltc-22",
            R.string.avg_weight_lifted_title,
            R.string.chest_mv_sub_title,
            R.string.avg_weight_lifted_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            122),
    AVG_WEIGHT_LIFTED_BACK_MV("avg-wltc-23",
            R.string.avg_weight_lifted_title,
            R.string.back_mv_sub_title,
            R.string.avg_weight_lifted_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            123),
    AVG_WEIGHT_LIFTED_BICEPS_MV("avg-wltc-24",
            R.string.avg_weight_lifted_title,
            R.string.biceps_mv_sub_title,
            R.string.avg_weight_lifted_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            124),
    AVG_WEIGHT_LIFTED_TRICEPS_MV("avg-wltc-25",
            R.string.avg_weight_lifted_title,
            R.string.triceps_mv_sub_title,
            R.string.avg_weight_lifted_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            125),
    AVG_WEIGHT_LIFTED_FOREARMS_MV("avg-wltc-26",
            R.string.avg_weight_lifted_title,
            R.string.forearms_mv_sub_title,
            R.string.avg_weight_lifted_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            126),
    AVG_WEIGHT_LIFTED_CORE_MV("avg-wltc-27",
            R.string.avg_weight_lifted_title,
            R.string.core_mv_sub_title,
            R.string.avg_weight_lifted_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            127),
    AVG_WEIGHT_LIFTED_LOWER_BODY_MV("avg-wltc-28",
            R.string.avg_weight_lifted_title,
            R.string.lower_body_mv_sub_title,
            R.string.avg_weight_lifted_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            128),
    AVG_WEIGHT_LIFTED_QUADS_MV("avg-wltc-29",
            R.string.avg_weight_lifted_title,
            R.string.quads_mv_sub_title,
            R.string.avg_weight_lifted_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            129),
    AVG_WEIGHT_LIFTED_HAMS_MV("avg-wltc-30",
            R.string.avg_weight_lifted_title,
            R.string.hamstrings_mv_sub_title,
            R.string.avg_weight_lifted_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            130),
    AVG_WEIGHT_LIFTED_CALFS_MV("avg-wltc-31",
            R.string.avg_weight_lifted_title,
            R.string.calfs_mv_sub_title,
            R.string.avg_weight_lifted_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            131),
    AVG_WEIGHT_LIFTED_GLUTES_MV("avg-wltc-32",
            R.string.avg_weight_lifted_title,
            R.string.glutes_mv_sub_title,
            R.string.avg_weight_lifted_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            132),
    AVG_WEIGHT_LIFTED_HIP_ABDUCTORS_MV("avg-wltc-33",
            R.string.avg_weight_lifted_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.avg_weight_lifted_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            133),
    AVG_WEIGHT_LIFTED_HIP_FLEXORS_MV("avg-wltc-34",
            R.string.avg_weight_lifted_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.avg_weight_lifted_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.strengthValueForMaxWeight(userSettings, max),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            134),
    /**
     * *********************************************************************************************
     * Distribution Weight Lifted Charts
     * *********************************************************************************************
     */
    DIST_TOTAL_WEIGHT_LIFTED_BODY_SEGMENTS("wldist-0",
            R.string.weight_lifted_dist_title,
            R.string.body_segments_sub_title,
            R.string.dist_weight_lifted_body_segments_info,
            chartRawData -> chartRawData.byBodySegment,
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID,
            R.id.bodySegmentsChartContainer,
            200),
    DIST_TOTAL_WEIGHT_LIFTED_ALL_MGS("wldist-1",
            R.string.weight_lifted_dist_title,
            R.string.all_mgs_sub_title,
            R.string.dist_weight_lifted_all_mgs_info,
            chartRawData -> chartRawData.byMuscleGroup,
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            R.id.distContainer,
            R.id.allMgsChartContainer,
            201),
    DIST_TOTAL_WEIGHT_LIFTED_UPPER_BODY("wldist-3", // in iOS, for impl reason, wldist-2 is used for the section heading view
            R.string.weight_lifted_dist_title,
            R.string.upper_body_sub_title,
            R.string.dist_weight_lifted_upper_body_info,
            chartRawData -> chartRawData.byUpperBodySegment,
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            203),
    DIST_TOTAL_WEIGHT_LIFTED_SHOULDERS("wldist-4",
            R.string.weight_lifted_dist_title,
            R.string.shoulders_sub_title,
            R.string.dist_weight_lifted_shoulders_info,
            chartRawData -> chartRawData.byShoulderMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            204),
    DIST_TOTAL_WEIGHT_LIFTED_CHEST("wldist-5",
            R.string.weight_lifted_dist_title,
            R.string.chest_sub_title,
            R.string.dist_weight_lifted_chest_info,
            chartRawData -> chartRawData.byChestMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            205),
    DIST_TOTAL_WEIGHT_LIFTED_BACK("wldist-6",
            R.string.weight_lifted_dist_title,
            R.string.back_sub_title,
            R.string.dist_weight_lifted_back_info,
            chartRawData -> chartRawData.byBackMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            206),
    DIST_TOTAL_WEIGHT_LIFTED_TRICEPS("wldist-7",
            R.string.weight_lifted_dist_title,
            R.string.triceps_sub_title,
            R.string.dist_weight_lifted_triceps_info,
            chartRawData -> chartRawData.byTricepsMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            207),
    DIST_TOTAL_WEIGHT_LIFTED_CORE("wldist-8",
            R.string.weight_lifted_dist_title,
            R.string.core_sub_title,
            R.string.dist_weight_lifted_core_info,
            chartRawData -> chartRawData.byCoreMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            208),
    DIST_TOTAL_WEIGHT_LIFTED_LOWER_BODY("wldist-9",
            R.string.weight_lifted_dist_title,
            R.string.lower_body_sub_title,
            R.string.dist_weight_lifted_lower_body_info,
            chartRawData -> chartRawData.byLowerBodySegment,
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            209),
    DIST_TOTAL_WEIGHT_LIFTED_ALL_MGS_MV("wldist-11", // wldist-10 in iOS is used for the chart section
            R.string.weight_lifted_dist_title,
            R.string.all_mgs_mv_sub_title,
            R.string.dist_weight_lifted_all_mgs_mv_info,
            chartRawData -> chartRawData.byMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            211),
    DIST_TOTAL_WEIGHT_LIFTED_UPPER_BODY_MV("wldist-12",
            R.string.weight_lifted_dist_title,
            R.string.upper_body_mv_sub_title,
            R.string.dist_weight_lifted_upper_body_mv_info,
            chartRawData -> chartRawData.upperBodyByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            212),
    DIST_TOTAL_WEIGHT_LIFTED_SHOULDERS_MV("wldist-13",
            R.string.weight_lifted_dist_title,
            R.string.shoulders_mv_sub_title,
            R.string.dist_weight_lifted_shoulders_mv_info,
            chartRawData -> chartRawData.shoulderByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            213),
    DIST_TOTAL_WEIGHT_LIFTED_CHEST_MV("wldist-14",
            R.string.weight_lifted_dist_title,
            R.string.chest_mv_sub_title,
            R.string.dist_weight_lifted_chest_mv_info,
            chartRawData -> chartRawData.chestByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            214),
    DIST_TOTAL_WEIGHT_LIFTED_BACK_MV("wldist-15",
            R.string.weight_lifted_dist_title,
            R.string.back_mv_sub_title,
            R.string.dist_weight_lifted_back_mv_info,
            chartRawData -> chartRawData.backByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            215),
    DIST_TOTAL_WEIGHT_LIFTED_BICEPS_MV("wldist-16",
            R.string.weight_lifted_dist_title,
            R.string.biceps_mv_sub_title,
            R.string.dist_weight_lifted_biceps_mv_info,
            chartRawData -> chartRawData.bicepsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            216),
    DIST_TOTAL_WEIGHT_LIFTED_TRICEPS_MV("wldist-17",
            R.string.weight_lifted_dist_title,
            R.string.triceps_mv_sub_title,
            R.string.dist_weight_lifted_triceps_mv_info,
            chartRawData -> chartRawData.tricepsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            217),
    DIST_TOTAL_WEIGHT_LIFTED_FOREARMS_MV("wldist-18",
            R.string.weight_lifted_dist_title,
            R.string.forearms_mv_sub_title,
            R.string.dist_weight_lifted_forearms_mv_info,
            chartRawData -> chartRawData.forearmsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            218),
    DIST_TOTAL_WEIGHT_LIFTED_CORE_MV("wldist-19",
            R.string.weight_lifted_dist_title,
            R.string.core_mv_sub_title,
            R.string.dist_weight_lifted_core_mv_info,
            chartRawData -> chartRawData.coreByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            219),
    DIST_TOTAL_WEIGHT_LIFTED_LOWER_BODY_MV("wldist-20",
            R.string.weight_lifted_dist_title,
            R.string.lower_body_mv_sub_title,
            R.string.dist_weight_lifted_lower_body_mv_info,
            chartRawData -> chartRawData.lowerBodyByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            220),
    DIST_TOTAL_WEIGHT_LIFTED_QUADS_MV("wldist-21",
            R.string.weight_lifted_dist_title,
            R.string.quads_mv_sub_title,
            R.string.dist_weight_lifted_quads_mv_info,
            chartRawData -> chartRawData.quadsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            221),
    DIST_TOTAL_WEIGHT_LIFTED_HAMS_MV("wldist-22",
            R.string.weight_lifted_dist_title,
            R.string.hamstrings_mv_sub_title,
            R.string.dist_weight_lifted_hamstrings_mv_info,
            chartRawData -> chartRawData.hamstringsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            222),
    DIST_TOTAL_WEIGHT_LIFTED_CALFS_MV("wldist-23",
            R.string.weight_lifted_dist_title,
            R.string.calfs_mv_sub_title,
            R.string.dist_weight_lifted_calfs_mv_info,
            chartRawData -> chartRawData.calfsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            223),
    DIST_TOTAL_WEIGHT_LIFTED_GLUTES_MV("wldist-24",
            R.string.weight_lifted_dist_title,
            R.string.glutes_mv_sub_title,
            R.string.dist_weight_lifted_glutes_mv_info,
            chartRawData -> chartRawData.glutesByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            224),
    DIST_TOTAL_WEIGHT_LIFTED_HIP_ABDUCTORS_MV("wldist-25",
            R.string.weight_lifted_dist_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.dist_weight_lifted_hip_abductors_mv_info,
            chartRawData -> chartRawData.hipAbductorsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            225),
    DIST_TOTAL_WEIGHT_LIFTED_HIP_FLEXORS_MV("wldist-26",
            R.string.weight_lifted_dist_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.dist_weight_lifted_hip_flexors_mv_info,
            chartRawData -> chartRawData.hipFlexorsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            226),
    /**
     * *********************************************************************************************
     * Distribution / Time Weight Lifted Charts
     * *********************************************************************************************
     */
    DIST_TIME_WEIGHT_LIFTED_BODY_SEGMENTS("wldistt-1",
            R.string.weight_lifted_dist_title,
            R.string.body_segments_sub_title,
            R.string.dist_time_weight_lifted_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            301),
    DIST_TIME_WEIGHT_LIFTED_ALL_MGS("wldistt-2",
            R.string.weight_lifted_dist_title,
            R.string.all_mgs_sub_title,
            R.string.dist_time_weight_lifted_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            R.id.distTimeContainer,
            R.id.allMgsChartContainer,
            302),
    DIST_TIME_WEIGHT_LIFTED_UPPER_BODY("wldistt-4",
            R.string.weight_lifted_dist_title,
            R.string.upper_body_sub_title,
            R.string.dist_time_weight_lifted_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            304),
    DIST_TIME_WEIGHT_LIFTED_SHOULDERS("wldistt-5",
            R.string.weight_lifted_dist_title,
            R.string.shoulders_sub_title,
            R.string.dist_time_weight_lifted_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            305),
    DIST_TIME_WEIGHT_LIFTED_CHEST("wldistt-6",
            R.string.weight_lifted_dist_title,
            R.string.chest_sub_title,
            R.string.dist_time_weight_lifted_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            306),
    DIST_TIME_WEIGHT_LIFTED_BACK("wldistt-7",
            R.string.weight_lifted_dist_title,
            R.string.back_sub_title,
            R.string.dist_time_weight_lifted_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            307),
    DIST_TIME_WEIGHT_LIFTED_TRICEPS("wldistt-9",
            R.string.weight_lifted_dist_title,
            R.string.triceps_sub_title,
            R.string.dist_time_weight_lifted_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            309),
    DIST_TIME_WEIGHT_LIFTED_CORE("wldistt-11",
            R.string.weight_lifted_dist_title,
            R.string.core_sub_title,
            R.string.dist_time_weight_lifted_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            311),
    DIST_TIME_WEIGHT_LIFTED_LOWER_BODY("wldistt-12",
            R.string.weight_lifted_dist_title,
            R.string.lower_body_sub_title,
            R.string.dist_time_weight_lifted_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            312),
    DIST_TIME_WEIGHT_LIFTED_ALL_MGS_MV("wldistt-18",
            R.string.weight_lifted_dist_title,
            R.string.all_mgs_mv_sub_title,
            R.string.dist_time_weight_lifted_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            318),
    DIST_TIME_WEIGHT_LIFTED_UPPER_BODY_MV("wldistt-19",
            R.string.weight_lifted_dist_title,
            R.string.upper_body_mv_sub_title,
            R.string.dist_time_weight_lifted_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            319),
    DIST_TIME_WEIGHT_LIFTED_SHOULDERS_MV("wldistt-20",
            R.string.weight_lifted_dist_title,
            R.string.shoulders_mv_sub_title,
            R.string.dist_time_weight_lifted_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            320),
    DIST_TIME_WEIGHT_LIFTED_CHEST_MV("wldistt-21",
            R.string.weight_lifted_dist_title,
            R.string.chest_mv_sub_title,
            R.string.dist_time_weight_lifted_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            321),
    DIST_TIME_WEIGHT_LIFTED_BACK_MV("wldistt-22",
            R.string.weight_lifted_dist_title,
            R.string.back_mv_sub_title,
            R.string.dist_time_weight_lifted_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            322),
    DIST_TIME_WEIGHT_LIFTED_BICEPS_MV("wldistt-23",
            R.string.weight_lifted_dist_title,
            R.string.biceps_mv_sub_title,
            R.string.dist_time_weight_lifted_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            323),
    DIST_TIME_WEIGHT_LIFTED_TRICEPS_MV("wldistt-24",
            R.string.weight_lifted_dist_title,
            R.string.triceps_mv_sub_title,
            R.string.dist_time_weight_lifted_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            324),
    DIST_TIME_WEIGHT_LIFTED_FOREARMS_MV("wldistt-25",
            R.string.weight_lifted_dist_title,
            R.string.forearms_mv_sub_title,
            R.string.dist_time_weight_lifted_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            325),
    DIST_TIME_WEIGHT_LIFTED_CORE_MV("wldistt-26",
            R.string.weight_lifted_dist_title,
            R.string.core_mv_sub_title,
            R.string.dist_time_weight_lifted_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            326),
    DIST_TIME_WEIGHT_LIFTED_LOWER_BODY_MV("wldistt-27",
            R.string.weight_lifted_dist_title,
            R.string.lower_body_mv_sub_title,
            R.string.dist_time_weight_lifted_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            327),
    DIST_TIME_WEIGHT_LIFTED_QUADS_MV("wldistt-28",
            R.string.weight_lifted_dist_title,
            R.string.quads_mv_sub_title,
            R.string.dist_time_weight_lifted_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            328),
    DIST_TIME_WEIGHT_LIFTED_HAMS_MV("wldistt-29",
            R.string.weight_lifted_dist_title,
            R.string.hamstrings_mv_sub_title,
            R.string.dist_time_weight_lifted_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            329),
    DIST_TIME_WEIGHT_LIFTED_CALFS_MV("wldistt-30",
            R.string.weight_lifted_dist_title,
            R.string.calfs_mv_sub_title,
            R.string.dist_time_weight_lifted_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            330),
    DIST_TIME_WEIGHT_LIFTED_GLUTES_MV("wldistt-31",
            R.string.weight_lifted_dist_title,
            R.string.glutes_mv_sub_title,
            R.string.dist_time_weight_lifted_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            331),
    DIST_TIME_WEIGHT_LIFTED_HIP_ABDUCTORS_MV("wldistt-32",
            R.string.weight_lifted_dist_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.dist_time_weight_lifted_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            332),
    DIST_TIME_WEIGHT_LIFTED_HIP_FLEXORS_MV("wldistt-33",
            R.string.weight_lifted_dist_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.dist_time_weight_lifted_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.WEIGHT,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            333),
// -------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------

    /**
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     *    Reps Charts
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     */

    /**
     * *********************************************************************************************
     * Total Reps Charts
     * *********************************************************************************************
     */
    TOTAL_REPS_TOTAL("rtc-0",
            R.string.total_reps_title,
            NO_RES_ID,
            R.string.total_reps_total_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.timeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.singleValueColor,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.totalChartContainer,
            1000),
    TOTAL_REPS_BODY_SEGMENTS("rtc-1",
            R.string.total_reps_title,
            R.string.body_segments_sub_title,
            R.string.total_reps_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            1001),
    TOTAL_REPS_ALL_MGS("rtc-2",
            R.string.total_reps_title,
            R.string.all_mgs_sub_title,
            R.string.total_reps_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            R.id.totalContainer,
            R.id.allMgsChartContainer,
            1002),
    TOTAL_REPS_UPPER_BODY("rtc-4", // in iOS, for impl reason, wltc-3 is used for the section heading view
            R.string.total_reps_title,
            R.string.upper_body_sub_title,
            R.string.total_reps_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            1004),
    TOTAL_REPS_SHOULDERS("rtc-5",
            R.string.total_reps_title,
            R.string.shoulders_sub_title,
            R.string.total_reps_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            1005),
    TOTAL_REPS_CHEST("rtc-6",
            R.string.total_reps_title,
            R.string.chest_sub_title,
            R.string.total_reps_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            1006),
    TOTAL_REPS_BACK("rtc-7",
            R.string.total_reps_title,
            R.string.back_sub_title,
            R.string.total_reps_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            1007),
    TOTAL_REPS_BICEPS("rtc-8",
            R.string.total_reps_title,
            R.string.biceps_sub_title,
            R.string.total_reps_biceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBicepsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsChartContainer,
            1008),
    TOTAL_REPS_TRICEPS("rtc-9",
            R.string.total_reps_title,
            R.string.triceps_sub_title,
            R.string.total_reps_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            1009),
    TOTAL_REPS_FOREARMS("rtc-10",
            R.string.total_reps_title,
            R.string.forearms_sub_title,
            R.string.total_reps_forearms_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byForearmsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.FOREARMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsChartContainer,
            1010),
    TOTAL_REPS_CORE("rtc-11",
            R.string.total_reps_title,
            R.string.core_sub_title,
            R.string.total_reps_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            1011),
    TOTAL_REPS_LOWER_BODY("rtc-12",
            R.string.total_reps_title,
            R.string.lower_body_sub_title,
            R.string.total_reps_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            1012),
    TOTAL_REPS_QUADS("rtc-13",
            R.string.total_reps_title,
            R.string.quads_sub_title,
            R.string.total_reps_quads_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byQuadsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.QUADS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsChartContainer,
            1013),
    TOTAL_REPS_HAMS("rtc-14",
            R.string.total_reps_title,
            R.string.hamstrings_sub_title,
            R.string.total_reps_hamstrings_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHamstringsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HAMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsChartContainer,
            1014),
    TOTAL_REPS_CALFS("rtc-15",
            R.string.total_reps_title,
            R.string.calfs_sub_title,
            R.string.total_reps_calfs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCalfsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CALF.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsChartContainer,
            1015),
    TOTAL_REPS_GLUTES("rtc-16",
            R.string.total_reps_title,
            R.string.glutes_sub_title,
            R.string.total_reps_glutes_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byGlutesMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.GLUTES.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesChartContainer,
            1016),
    TOTAL_REPS_HIP_ABDUCTORS("rtc-17",
            R.string.total_reps_title,
            R.string.hip_abductors_sub_title,
            R.string.total_reps_hip_abductors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipAbductorsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_ABDUCTORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsChartContainer,
            1017),
    TOTAL_REPS_HIP_FLEXORS("rtc-18",
            R.string.total_reps_title,
            R.string.hip_flexors_sub_title,
            R.string.total_reps_hip_flexors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipFlexorsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_FLEXORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsChartContainer,
            1018),
    TOTAL_REPS_ALL_MGS_MV("rtc-19",
            R.string.total_reps_title,
            R.string.all_mgs_mv_sub_title,
            R.string.total_reps_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            1019),
    TOTAL_REPS_UPPER_BODY_MV("rtc-20",
            R.string.total_reps_title,
            R.string.upper_body_mv_sub_title,
            R.string.total_reps_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            1020),
    TOTAL_REPS_SHOULDERS_MV("rtc-21",
            R.string.total_reps_title,
            R.string.shoulders_mv_sub_title,
            R.string.total_reps_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            1021),
    TOTAL_REPS_CHEST_MV("rtc-22",
            R.string.total_reps_title,
            R.string.chest_mv_sub_title,
            R.string.total_reps_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            1022),
    TOTAL_REPS_BACK_MV("rtc-23",
            R.string.total_reps_title,
            R.string.back_mv_sub_title,
            R.string.total_reps_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            1023),
    TOTAL_REPS_BICEPS_MV("rtc-24",
            R.string.total_reps_title,
            R.string.biceps_mv_sub_title,
            R.string.total_reps_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            1024),
    TOTAL_REPS_TRICEPS_MV("rtc-25",
            R.string.total_reps_title,
            R.string.triceps_mv_sub_title,
            R.string.total_reps_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            1025),
    TOTAL_REPS_FOREARMS_MV("rtc-26",
            R.string.total_reps_title,
            R.string.forearms_mv_sub_title,
            R.string.total_reps_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            1026),
    TOTAL_REPS_CORE_MV("rtc-27",
            R.string.total_reps_title,
            R.string.core_mv_sub_title,
            R.string.total_reps_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            1027),
    TOTAL_REPS_LOWER_BODY_MV("rtc-28",
            R.string.total_reps_title,
            R.string.lower_body_mv_sub_title,
            R.string.total_reps_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            1028),
    TOTAL_REPS_QUADS_MV("rtc-29",
            R.string.total_reps_title,
            R.string.quads_mv_sub_title,
            R.string.total_reps_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            1029),
    TOTAL_REPS_HAMS_MV("rtc-30",
            R.string.total_reps_title,
            R.string.hamstrings_mv_sub_title,
            R.string.total_reps_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            1030),
    TOTAL_REPS_CALFS_MV("rtc-31",
            R.string.total_reps_title,
            R.string.calfs_mv_sub_title,
            R.string.total_reps_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            1031),
    TOTAL_REPS_GLUTES_MV("rtc-32",
            R.string.total_reps_title,
            R.string.glutes_mv_sub_title,
            R.string.total_reps_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            1032),
    TOTAL_REPS_HIP_ABDUCTORS_MV("rtc-33",
            R.string.total_reps_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.total_reps_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            1033),
    TOTAL_REPS_HIP_FLEXORS_MV("rtc-34",
            R.string.total_reps_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.total_reps_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            1034),
    /**
     * *********************************************************************************************
     * Average Reps Charts
     * *********************************************************************************************
     */
    AVG_REPS_TOTAL("avg-rtc-0",
            R.string.avg_reps_title,
            NO_RES_ID,
            R.string.avg_reps_avg_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.timeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.singleValueColor,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.totalChartContainer,
            1100),
    AVG_REPS_BODY_SEGMENTS("avg-rtc-1",
            R.string.avg_reps_title,
            R.string.body_segments_sub_title,
            R.string.avg_reps_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            1101),
    AVG_REPS_ALL_MGS("avg-rtc-2",
            R.string.avg_reps_title,
            R.string.all_mgs_sub_title,
            R.string.avg_reps_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            R.id.avgContainer,
            R.id.allMgsChartContainer,
            1102),
    AVG_REPS_UPPER_BODY("avg-rtc-4", // in iOS, for impl reason, wltc-3 is used for the section heading view
            R.string.avg_reps_title,
            R.string.upper_body_sub_title,
            R.string.avg_reps_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            1104),
    AVG_REPS_SHOULDERS("avg-rtc-5",
            R.string.avg_reps_title,
            R.string.shoulders_sub_title,
            R.string.avg_reps_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            1105),
    AVG_REPS_CHEST("avg-rtc-6",
            R.string.avg_reps_title,
            R.string.chest_sub_title,
            R.string.avg_reps_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            1106),
    AVG_REPS_BACK("avg-rtc-7",
            R.string.avg_reps_title,
            R.string.back_sub_title,
            R.string.avg_reps_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            1107),
    AVG_REPS_BICEPS("avg-rtc-8",
            R.string.avg_reps_title,
            R.string.biceps_sub_title,
            R.string.avg_reps_biceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBicepsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsChartContainer,
            1108),
    AVG_REPS_TRICEPS("avg-rtc-9",
            R.string.avg_reps_title,
            R.string.triceps_sub_title,
            R.string.avg_reps_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            1109),
    AVG_REPS_FOREARMS("avg-rtc-10",
            R.string.avg_reps_title,
            R.string.forearms_sub_title,
            R.string.avg_reps_forearms_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byForearmsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.FOREARMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsChartContainer,
            1110),
    AVG_REPS_CORE("avg-rtc-11",
            R.string.avg_reps_title,
            R.string.core_sub_title,
            R.string.avg_reps_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            1111),
    AVG_REPS_LOWER_BODY("avg-rtc-12",
            R.string.avg_reps_title,
            R.string.lower_body_sub_title,
            R.string.avg_reps_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            1112),
    AVG_REPS_QUADS("avg-rtc-13",
            R.string.avg_reps_title,
            R.string.quads_sub_title,
            R.string.avg_reps_quads_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byQuadsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.QUADS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsChartContainer,
            1113),
    AVG_REPS_HAMS("avg-rtc-14",
            R.string.avg_reps_title,
            R.string.hamstrings_sub_title,
            R.string.avg_reps_hamstrings_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHamstringsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HAMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsChartContainer,
            1114),
    AVG_REPS_CALFS("avg-rtc-15",
            R.string.avg_reps_title,
            R.string.calfs_sub_title,
            R.string.avg_reps_calfs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCalfsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CALF.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsChartContainer,
            1115),
    AVG_REPS_GLUTES("avg-rtc-16",
            R.string.avg_reps_title,
            R.string.glutes_sub_title,
            R.string.avg_reps_glutes_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byGlutesMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.GLUTES.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesChartContainer,
            1116),
    AVG_REPS_HIP_ABDUCTORS("avg-rtc-17",
            R.string.avg_reps_title,
            R.string.hip_abductors_sub_title,
            R.string.avg_reps_hip_abductors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipAbductorsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_ABDUCTORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsChartContainer,
            1117),
    AVG_REPS_HIP_FLEXORS("avg-rtc-18",
            R.string.avg_reps_title,
            R.string.hip_flexors_sub_title,
            R.string.avg_reps_hip_flexors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipFlexorsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_FLEXORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsChartContainer,
            1118),
    AVG_REPS_ALL_MGS_MV("avg-rtc-19",
            R.string.avg_reps_title,
            R.string.all_mgs_mv_sub_title,
            R.string.avg_reps_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            1119),
    AVG_REPS_UPPER_BODY_MV("avg-rtc-20",
            R.string.avg_reps_title,
            R.string.upper_body_mv_sub_title,
            R.string.avg_reps_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            1120),
    AVG_REPS_SHOULDERS_MV("avg-rtc-21",
            R.string.avg_reps_title,
            R.string.shoulders_mv_sub_title,
            R.string.avg_reps_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            1121),
    AVG_REPS_CHEST_MV("avg-rtc-22",
            R.string.avg_reps_title,
            R.string.chest_mv_sub_title,
            R.string.avg_reps_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            1122),
    AVG_REPS_BACK_MV("avg-rtc-23",
            R.string.avg_reps_title,
            R.string.back_mv_sub_title,
            R.string.avg_reps_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            1123),
    AVG_REPS_BICEPS_MV("avg-rtc-24",
            R.string.avg_reps_title,
            R.string.biceps_mv_sub_title,
            R.string.avg_reps_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            1124),
    AVG_REPS_TRICEPS_MV("avg-rtc-25",
            R.string.avg_reps_title,
            R.string.triceps_mv_sub_title,
            R.string.avg_reps_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            1125),
    AVG_REPS_FOREARMS_MV("avg-rtc-26",
            R.string.avg_reps_title,
            R.string.forearms_mv_sub_title,
            R.string.avg_reps_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            1126),
    AVG_REPS_CORE_MV("avg-rtc-27",
            R.string.avg_reps_title,
            R.string.core_mv_sub_title,
            R.string.avg_reps_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            1127),
    AVG_REPS_LOWER_BODY_MV("avg-rtc-28",
            R.string.avg_reps_title,
            R.string.lower_body_mv_sub_title,
            R.string.avg_reps_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            1128),
    AVG_REPS_QUADS_MV("avg-rtc-29",
            R.string.avg_reps_title,
            R.string.quads_mv_sub_title,
            R.string.avg_reps_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            1129),
    AVG_REPS_HAMS_MV("avg-rtc-30",
            R.string.avg_reps_title,
            R.string.hamstrings_mv_sub_title,
            R.string.avg_reps_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            1130),
    AVG_REPS_CALFS_MV("avg-rtc-31",
            R.string.avg_reps_title,
            R.string.calfs_mv_sub_title,
            R.string.avg_reps_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            1131),
    AVG_REPS_GLUTES_MV("avg-rtc-32",
            R.string.avg_reps_title,
            R.string.glutes_mv_sub_title,
            R.string.avg_reps_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            1132),
    AVG_REPS_HIP_ABDUCTORS_MV("avg-rtc-33",
            R.string.avg_reps_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.avg_reps_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            1133),
    AVG_REPS_HIP_FLEXORS_MV("avg-rtc-34",
            R.string.avg_reps_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.avg_reps_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "reps"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            1134),

    /**
     * *********************************************************************************************
     * Distribution Reps Charts
     * *********************************************************************************************
     */
    DIST_TOTAL_REPS_BODY_SEGMENTS("rdist-0",
            R.string.reps_dist_title,
            R.string.body_segments_sub_title,
            R.string.dist_reps_body_segments_info,
            chartRawData -> chartRawData.byBodySegment,
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID,
            R.id.bodySegmentsChartContainer,
            1200),
    DIST_TOTAL_REPS_ALL_MGS("rdist-1",
            R.string.reps_dist_title,
            R.string.all_mgs_sub_title,
            R.string.dist_reps_all_mgs_info,
            chartRawData -> chartRawData.byMuscleGroup,
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            R.id.distContainer,
            R.id.allMgsChartContainer,
            1201),
    DIST_TOTAL_REPS_UPPER_BODY("rdist-3", // in iOS, for impl reason, rdist-2 is used for the section heading view
            R.string.reps_dist_title,
            R.string.upper_body_sub_title,
            R.string.dist_reps_upper_body_info,
            chartRawData -> chartRawData.byUpperBodySegment,
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            1203),
    DIST_TOTAL_REPS_SHOULDERS("rdist-4",
            R.string.reps_dist_title,
            R.string.shoulders_sub_title,
            R.string.dist_reps_shoulders_info,
            chartRawData -> chartRawData.byShoulderMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            1204),
    DIST_TOTAL_REPS_CHEST("rdist-5",
            R.string.reps_dist_title,
            R.string.chest_sub_title,
            R.string.dist_reps_chest_info,
            chartRawData -> chartRawData.byChestMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            1205),
    DIST_TOTAL_REPS_BACK("rdist-6",
            R.string.reps_dist_title,
            R.string.back_sub_title,
            R.string.dist_reps_back_info,
            chartRawData -> chartRawData.byBackMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            1206),
    DIST_TOTAL_REPS_TRICEPS("rdist-7",
            R.string.reps_dist_title,
            R.string.triceps_sub_title,
            R.string.dist_reps_triceps_info,
            chartRawData -> chartRawData.byTricepsMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            1207),
    DIST_TOTAL_REPS_CORE("rdist-8",
            R.string.reps_dist_title,
            R.string.core_sub_title,
            R.string.dist_reps_core_info,
            chartRawData -> chartRawData.byCoreMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            1208),
    DIST_TOTAL_REPS_LOWER_BODY("rdist-9",
            R.string.reps_dist_title,
            R.string.lower_body_sub_title,
            R.string.dist_reps_lower_body_info,
            chartRawData -> chartRawData.byLowerBodySegment,
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            1209),
    DIST_TOTAL_REPS_ALL_MGS_MV("rdist-11", // rdist-10 in iOS is used for the chart section
            R.string.reps_dist_title,
            R.string.all_mgs_mv_sub_title,
            R.string.dist_reps_all_mgs_mv_info,
            chartRawData -> chartRawData.byMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            1211),
    DIST_TOTAL_REPS_UPPER_BODY_MV("rdist-12",
            R.string.reps_dist_title,
            R.string.upper_body_mv_sub_title,
            R.string.dist_reps_upper_body_mv_info,
            chartRawData -> chartRawData.upperBodyByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            1212),
    DIST_TOTAL_REPS_SHOULDERS_MV("rdist-13",
            R.string.reps_dist_title,
            R.string.shoulders_mv_sub_title,
            R.string.dist_reps_shoulders_mv_info,
            chartRawData -> chartRawData.shoulderByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            1213),
    DIST_TOTAL_REPS_CHEST_MV("rdist-14",
            R.string.reps_dist_title,
            R.string.chest_mv_sub_title,
            R.string.dist_reps_chest_mv_info,
            chartRawData -> chartRawData.chestByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            1214),
    DIST_TOTAL_REPS_BACK_MV("rdist-15",
            R.string.reps_dist_title,
            R.string.back_mv_sub_title,
            R.string.dist_reps_back_mv_info,
            chartRawData -> chartRawData.backByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            1215),
    DIST_TOTAL_REPS_BICEPS_MV("rdist-16",
            R.string.reps_dist_title,
            R.string.biceps_mv_sub_title,
            R.string.dist_reps_biceps_mv_info,
            chartRawData -> chartRawData.bicepsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            1216),
    DIST_TOTAL_REPS_TRICEPS_MV("rdist-17",
            R.string.reps_dist_title,
            R.string.triceps_mv_sub_title,
            R.string.dist_reps_triceps_mv_info,
            chartRawData -> chartRawData.tricepsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            1217),
    DIST_TOTAL_REPS_FOREARMS_MV("rdist-18",
            R.string.reps_dist_title,
            R.string.forearms_mv_sub_title,
            R.string.dist_reps_forearms_mv_info,
            chartRawData -> chartRawData.forearmsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            1218),
    DIST_TOTAL_REPS_CORE_MV("rdist-19",
            R.string.reps_dist_title,
            R.string.core_mv_sub_title,
            R.string.dist_reps_core_mv_info,
            chartRawData -> chartRawData.coreByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            1219),
    DIST_TOTAL_REPS_LOWER_BODY_MV("rdist-20",
            R.string.reps_dist_title,
            R.string.lower_body_mv_sub_title,
            R.string.dist_reps_lower_body_mv_info,
            chartRawData -> chartRawData.lowerBodyByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            1220),
    DIST_TOTAL_REPS_QUADS_MV("rdist-21",
            R.string.reps_dist_title,
            R.string.quads_mv_sub_title,
            R.string.dist_reps_quads_mv_info,
            chartRawData -> chartRawData.quadsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            1221),
    DIST_TOTAL_REPS_HAMS_MV("rdist-22",
            R.string.reps_dist_title,
            R.string.hamstrings_mv_sub_title,
            R.string.dist_reps_hamstrings_mv_info,
            chartRawData -> chartRawData.hamstringsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            1222),
    DIST_TOTAL_REPS_CALFS_MV("rdist-23",
            R.string.reps_dist_title,
            R.string.calfs_mv_sub_title,
            R.string.dist_reps_calfs_mv_info,
            chartRawData -> chartRawData.calfsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            1223),
    DIST_TOTAL_REPS_GLUTES_MV("rdist-24",
            R.string.reps_dist_title,
            R.string.glutes_mv_sub_title,
            R.string.dist_reps_glutes_mv_info,
            chartRawData -> chartRawData.glutesByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            1224),
    DIST_TOTAL_REPS_HIP_ABDUCTORS_MV("rdist-25",
            R.string.reps_dist_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.dist_reps_hip_abductors_mv_info,
            chartRawData -> chartRawData.hipAbductorsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            1225),
    DIST_TOTAL_REPS_HIP_FLEXORS_MV("rdist-26",
            R.string.reps_dist_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.dist_reps_hip_flexors_mv_info,
            chartRawData -> chartRawData.hipFlexorsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            1226),
    /**
     * *********************************************************************************************
     * Distribution / Time Reps Charts
     * *********************************************************************************************
     */
    DIST_TIME_REPS_BODY_SEGMENTS("rdistt-1",
            R.string.reps_dist_title,
            R.string.body_segments_sub_title,
            R.string.dist_time_reps_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            1301),
    DIST_TIME_REPS_ALL_MGS("rdistt-2",
            R.string.reps_dist_title,
            R.string.all_mgs_sub_title,
            R.string.dist_time_reps_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            R.id.distTimeContainer,
            R.id.allMgsChartContainer,
            1302),
    DIST_TIME_REPS_UPPER_BODY("rdistt-4",
            R.string.reps_dist_title,
            R.string.upper_body_sub_title,
            R.string.dist_time_reps_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            1304),
    DIST_TIME_REPS_SHOULDERS("rdistt-5",
            R.string.reps_dist_title,
            R.string.shoulders_sub_title,
            R.string.dist_time_reps_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            1305),
    DIST_TIME_REPS_CHEST("rdistt-6",
            R.string.reps_dist_title,
            R.string.chest_sub_title,
            R.string.dist_time_reps_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            1306),
    DIST_TIME_REPS_BACK("rdistt-7",
            R.string.reps_dist_title,
            R.string.back_sub_title,
            R.string.dist_time_reps_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            1307),
    DIST_TIME_REPS_TRICEPS("rdistt-9",
            R.string.reps_dist_title,
            R.string.triceps_sub_title,
            R.string.dist_time_reps_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            1309),
    DIST_TIME_REPS_CORE("rdistt-11",
            R.string.reps_dist_title,
            R.string.core_sub_title,
            R.string.dist_time_reps_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            1311),
    DIST_TIME_REPS_LOWER_BODY("rdistt-12",
            R.string.reps_dist_title,
            R.string.lower_body_sub_title,
            R.string.dist_time_reps_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            1312),
    DIST_TIME_REPS_ALL_MGS_MV("rdistt-18",
            R.string.reps_dist_title,
            R.string.all_mgs_mv_sub_title,
            R.string.dist_time_reps_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            1318),
    DIST_TIME_REPS_UPPER_BODY_MV("rdistt-19",
            R.string.reps_dist_title,
            R.string.upper_body_mv_sub_title,
            R.string.dist_time_reps_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            1319),
    DIST_TIME_REPS_SHOULDERS_MV("rdistt-20",
            R.string.reps_dist_title,
            R.string.shoulders_mv_sub_title,
            R.string.dist_time_reps_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            1320),
    DIST_TIME_REPS_CHEST_MV("rdistt-21",
            R.string.reps_dist_title,
            R.string.chest_mv_sub_title,
            R.string.dist_time_reps_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            1321),
    DIST_TIME_REPS_BACK_MV("rdistt-22",
            R.string.reps_dist_title,
            R.string.back_mv_sub_title,
            R.string.dist_time_reps_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            1322),
    DIST_TIME_REPS_BICEPS_MV("rdistt-23",
            R.string.reps_dist_title,
            R.string.biceps_mv_sub_title,
            R.string.dist_time_reps_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            1323),
    DIST_TIME_REPS_TRICEPS_MV("rdistt-24",
            R.string.reps_dist_title,
            R.string.triceps_mv_sub_title,
            R.string.dist_time_reps_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            1324),
    DIST_TIME_REPS_FOREARMS_MV("rdistt-25",
            R.string.reps_dist_title,
            R.string.forearms_mv_sub_title,
            R.string.dist_time_reps_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            1325),
    DIST_TIME_REPS_CORE_MV("rdistt-26",
            R.string.reps_dist_title,
            R.string.core_mv_sub_title,
            R.string.dist_time_reps_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            1326),
    DIST_TIME_REPS_LOWER_BODY_MV("rdistt-27",
            R.string.reps_dist_title,
            R.string.lower_body_mv_sub_title,
            R.string.dist_time_reps_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            1327),
    DIST_TIME_REPS_QUADS_MV("rdistt-28",
            R.string.reps_dist_title,
            R.string.quads_mv_sub_title,
            R.string.dist_time_reps_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            1328),
    DIST_TIME_REPS_HAMS_MV("rdistt-29",
            R.string.reps_dist_title,
            R.string.hamstrings_mv_sub_title,
            R.string.dist_time_reps_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            1329),
    DIST_TIME_REPS_CALFS_MV("rdistt-30",
            R.string.reps_dist_title,
            R.string.calfs_mv_sub_title,
            R.string.dist_time_reps_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            1330),
    DIST_TIME_REPS_GLUTES_MV("rdistt-31",
            R.string.reps_dist_title,
            R.string.glutes_mv_sub_title,
            R.string.dist_time_reps_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            1331),
    DIST_TIME_REPS_HIP_ABDUCTORS_MV("rdistt-32",
            R.string.reps_dist_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.dist_time_reps_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            1332),
    DIST_TIME_REPS_HIP_FLEXORS_MV("rdistt-33",
            R.string.reps_dist_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.dist_time_reps_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REPS,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            1333),
// -------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------

    /**
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     *    Rest Time Charts
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     */

    /**
     * *********************************************************************************************
     * Total Rest Time Charts
     * *********************************************************************************************
     */
    TOTAL_REST_TIME_TOTAL("tbstc-0",
            R.string.total_rest_time_title,
            NO_RES_ID,
            R.string.total_rest_time_total_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.timeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.singleValueColor,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.totalChartContainer,
            2000),
    TOTAL_REST_TIME_BODY_SEGMENTS("tbstc-1",
            R.string.total_rest_time_title,
            R.string.body_segments_sub_title,
            R.string.total_rest_time_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            2001),
    TOTAL_REST_TIME_ALL_MGS("tbstc-2",
            R.string.total_rest_time_title,
            R.string.all_mgs_sub_title,
            R.string.total_rest_time_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            R.id.totalContainer,
            R.id.allMgsChartContainer,
            2002),
    TOTAL_REST_TIME_UPPER_BODY("tbstc-4", // in iOS, for impl reason, wltc-3 is used for the section heading view
            R.string.total_rest_time_title,
            R.string.upper_body_sub_title,
            R.string.total_rest_time_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            2004),
    TOTAL_REST_TIME_SHOULDERS("tbstc-5",
            R.string.total_rest_time_title,
            R.string.shoulders_sub_title,
            R.string.total_rest_time_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            2005),
    TOTAL_REST_TIME_CHEST("tbstc-6",
            R.string.total_rest_time_title,
            R.string.chest_sub_title,
            R.string.total_rest_time_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            2006),
    TOTAL_REST_TIME_BACK("tbstc-7",
            R.string.total_rest_time_title,
            R.string.back_sub_title,
            R.string.total_rest_time_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            3007),
    TOTAL_REST_TIME_BICEPS("tbstc-8",
            R.string.total_rest_time_title,
            R.string.biceps_sub_title,
            R.string.total_rest_time_biceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBicepsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsChartContainer,
            3008),
    TOTAL_REST_TIME_TRICEPS("tbstc-9",
            R.string.total_rest_time_title,
            R.string.triceps_sub_title,
            R.string.total_rest_time_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            3009),
    TOTAL_REST_TIME_FOREARMS("tbstc-10",
            R.string.total_rest_time_title,
            R.string.forearms_sub_title,
            R.string.total_rest_time_forearms_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byForearmsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.FOREARMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsChartContainer,
            3010),
    TOTAL_REST_TIME_CORE("tbstc-11",
            R.string.total_rest_time_title,
            R.string.core_sub_title,
            R.string.total_rest_time_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            3011),
    TOTAL_REST_TIME_LOWER_BODY("tbstc-12",
            R.string.total_rest_time_title,
            R.string.lower_body_sub_title,
            R.string.total_rest_time_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            3012),
    TOTAL_REST_TIME_QUADS("tbstc-13",
            R.string.total_rest_time_title,
            R.string.quads_sub_title,
            R.string.total_rest_time_quads_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byQuadsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.QUADS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsChartContainer,
            3013),
    TOTAL_REST_TIME_HAMS("tbstc-14",
            R.string.total_rest_time_title,
            R.string.hamstrings_sub_title,
            R.string.total_rest_time_hamstrings_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHamstringsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HAMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsChartContainer,
            3014),
    TOTAL_REST_TIME_CALFS("tbstc-15",
            R.string.total_rest_time_title,
            R.string.calfs_sub_title,
            R.string.total_rest_time_calfs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCalfsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CALF.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsChartContainer,
            3015),
    TOTAL_REST_TIME_GLUTES("tbstc-16",
            R.string.total_rest_time_title,
            R.string.glutes_sub_title,
            R.string.total_rest_time_glutes_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byGlutesMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.GLUTES.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesChartContainer,
            3016),
    TOTAL_REST_TIME_HIP_ABDUCTORS("tbstc-17",
            R.string.total_rest_time_title,
            R.string.hip_abductors_sub_title,
            R.string.total_rest_time_hip_abductors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipAbductorsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_ABDUCTORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsChartContainer,
            3017),
    TOTAL_REST_TIME_HIP_FLEXORS("tbstc-18",
            R.string.total_rest_time_title,
            R.string.hip_flexors_sub_title,
            R.string.total_rest_time_hip_flexors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipFlexorsMgTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_FLEXORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsChartContainer,
            3018),
    TOTAL_REST_TIME_ALL_MGS_MV("tbstc-19",
            R.string.total_rest_time_title,
            R.string.all_mgs_mv_sub_title,
            R.string.total_rest_time_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            3019),
    TOTAL_REST_TIME_UPPER_BODY_MV("tbstc-20",
            R.string.total_rest_time_title,
            R.string.upper_body_mv_sub_title,
            R.string.total_rest_time_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            3020),
    TOTAL_REST_TIME_SHOULDERS_MV("tbstc-21",
            R.string.total_rest_time_title,
            R.string.shoulders_mv_sub_title,
            R.string.total_rest_time_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            3021),
    TOTAL_REST_TIME_CHEST_MV("tbstc-22",
            R.string.total_rest_time_title,
            R.string.chest_mv_sub_title,
            R.string.total_rest_time_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            3022),
    TOTAL_REST_TIME_BACK_MV("tbstc-23",
            R.string.total_rest_time_title,
            R.string.back_mv_sub_title,
            R.string.total_rest_time_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            3023),
    TOTAL_REST_TIME_BICEPS_MV("tbstc-24",
            R.string.total_rest_time_title,
            R.string.biceps_mv_sub_title,
            R.string.total_rest_time_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            3024),
    TOTAL_REST_TIME_TRICEPS_MV("tbstc-25",
            R.string.total_rest_time_title,
            R.string.triceps_mv_sub_title,
            R.string.total_rest_time_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            3025),
    TOTAL_REST_TIME_FOREARMS_MV("tbstc-26",
            R.string.total_rest_time_title,
            R.string.forearms_mv_sub_title,
            R.string.total_rest_time_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            3026),
    TOTAL_REST_TIME_CORE_MV("tbstc-27",
            R.string.total_rest_time_title,
            R.string.core_mv_sub_title,
            R.string.total_rest_time_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            3027),
    TOTAL_REST_TIME_LOWER_BODY_MV("tbstc-28",
            R.string.total_rest_time_title,
            R.string.lower_body_mv_sub_title,
            R.string.total_rest_time_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            3028),
    TOTAL_REST_TIME_QUADS_MV("tbstc-29",
            R.string.total_rest_time_title,
            R.string.quads_mv_sub_title,
            R.string.total_rest_time_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            3029),
    TOTAL_REST_TIME_HAMS_MV("tbstc-30",
            R.string.total_rest_time_title,
            R.string.hamstrings_mv_sub_title,
            R.string.total_rest_time_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            3030),
    TOTAL_REST_TIME_CALFS_MV("tbstc-31",
            R.string.total_rest_time_title,
            R.string.calfs_mv_sub_title,
            R.string.total_rest_time_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            3031),
    TOTAL_REST_TIME_GLUTES_MV("tbstc-32",
            R.string.total_rest_time_title,
            R.string.glutes_mv_sub_title,
            R.string.total_rest_time_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            3032),
    TOTAL_REST_TIME_HIP_ABDUCTORS_MV("tbstc-33",
            R.string.total_rest_time_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.total_rest_time_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            3033),
    TOTAL_REST_TIME_HIP_FLEXORS_MV("tbstc-34",
            R.string.total_rest_time_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.total_rest_time_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    false,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAggregateSummedValue,
            dataEntry -> dataEntry.aggregateSummedValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            3034),
    /**
     * *********************************************************************************************
     * Average Rest Time Charts
     * *********************************************************************************************
     */
    AVG_REST_TIME_TOTAL("avg-tbstc-0",
            R.string.avg_rest_time_title,
            NO_RES_ID,
            R.string.avg_rest_time_avg_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.timeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.singleValueColor,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.totalChartContainer,
            3100),
    AVG_REST_TIME_BODY_SEGMENTS("avg-tbstc-1",
            R.string.avg_rest_time_title,
            R.string.body_segments_sub_title,
            R.string.avg_rest_time_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            3101),
    AVG_REST_TIME_ALL_MGS("avg-tbstc-2",
            R.string.avg_rest_time_title,
            R.string.all_mgs_sub_title,
            R.string.avg_rest_time_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            R.id.avgContainer,
            R.id.allMgsChartContainer,
            3102),
    AVG_REST_TIME_UPPER_BODY("avg-tbstc-4", // in iOS, for impl reason, wltc-3 is used for the section heading view
            R.string.avg_rest_time_title,
            R.string.upper_body_sub_title,
            R.string.avg_rest_time_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            3104),
    AVG_REST_TIME_SHOULDERS("avg-tbstc-5",
            R.string.avg_rest_time_title,
            R.string.shoulders_sub_title,
            R.string.avg_rest_time_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            3105),
    AVG_REST_TIME_CHEST("avg-tbstc-6",
            R.string.avg_rest_time_title,
            R.string.chest_sub_title,
            R.string.avg_rest_time_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            3106),
    AVG_REST_TIME_BACK("avg-tbstc-7",
            R.string.avg_rest_time_title,
            R.string.back_sub_title,
            R.string.avg_rest_time_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            3107),
    AVG_REST_TIME_BICEPS("avg-tbstc-8",
            R.string.avg_rest_time_title,
            R.string.biceps_sub_title,
            R.string.avg_rest_time_biceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBicepsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsChartContainer,
            3108),
    AVG_REST_TIME_TRICEPS("avg-tbstc-9",
            R.string.avg_rest_time_title,
            R.string.triceps_sub_title,
            R.string.avg_rest_time_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            3109),
    AVG_REST_TIME_FOREARMS("avg-tbstc-10",
            R.string.avg_rest_time_title,
            R.string.forearms_sub_title,
            R.string.avg_rest_time_forearms_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byForearmsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.FOREARMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsChartContainer,
            3110),
    AVG_REST_TIME_CORE("avg-tbstc-11",
            R.string.avg_rest_time_title,
            R.string.core_sub_title,
            R.string.avg_rest_time_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            3111),
    AVG_REST_TIME_LOWER_BODY("avg-tbstc-12",
            R.string.avg_rest_time_title,
            R.string.lower_body_sub_title,
            R.string.avg_rest_time_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            3112),
    AVG_REST_TIME_QUADS("avg-tbstc-13",
            R.string.avg_rest_time_title,
            R.string.quads_sub_title,
            R.string.avg_rest_time_quads_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byQuadsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.QUADS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsChartContainer,
            3113),
    AVG_REST_TIME_HAMS("avg-tbstc-14",
            R.string.avg_rest_time_title,
            R.string.hamstrings_sub_title,
            R.string.avg_rest_time_hamstrings_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHamstringsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HAMS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsChartContainer,
            3114),
    AVG_REST_TIME_CALFS("avg-tbstc-15",
            R.string.avg_rest_time_title,
            R.string.calfs_sub_title,
            R.string.avg_rest_time_calfs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCalfsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CALF.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsChartContainer,
            3115),
    AVG_REST_TIME_GLUTES("avg-tbstc-16",
            R.string.avg_rest_time_title,
            R.string.glutes_sub_title,
            R.string.avg_rest_time_glutes_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byGlutesMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.GLUTES.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesChartContainer,
            3116),
    AVG_REST_TIME_HIP_ABDUCTORS("avg-tbstc-17",
            R.string.avg_rest_time_title,
            R.string.hip_abductors_sub_title,
            R.string.avg_rest_time_hip_abductors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipAbductorsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_ABDUCTORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsChartContainer,
            3117),
    AVG_REST_TIME_HIP_FLEXORS("avg-tbstc-18",
            R.string.avg_rest_time_title,
            R.string.hip_flexors_sub_title,
            R.string.avg_rest_time_hip_flexors_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byHipFlexorsMgTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.HIP_FLEXORS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsChartContainer,
            3118),
    AVG_REST_TIME_ALL_MGS_MV("avg-tbstc-19",
            R.string.avg_rest_time_title,
            R.string.all_mgs_mv_sub_title,
            R.string.avg_rest_time_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            3119),
    AVG_REST_TIME_UPPER_BODY_MV("avg-tbstc-20",
            R.string.avg_rest_time_title,
            R.string.upper_body_mv_sub_title,
            R.string.avg_rest_time_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            3120),
    AVG_REST_TIME_SHOULDERS_MV("avg-tbstc-21",
            R.string.avg_rest_time_title,
            R.string.shoulders_mv_sub_title,
            R.string.avg_rest_time_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            3121),
    AVG_REST_TIME_CHEST_MV("avg-tbstc-22",
            R.string.avg_rest_time_title,
            R.string.chest_mv_sub_title,
            R.string.avg_rest_time_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            3122),
    AVG_REST_TIME_BACK_MV("avg-tbstc-23",
            R.string.avg_rest_time_title,
            R.string.back_mv_sub_title,
            R.string.avg_rest_time_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            3123),
    AVG_REST_TIME_BICEPS_MV("avg-tbstc-24",
            R.string.avg_rest_time_title,
            R.string.biceps_mv_sub_title,
            R.string.avg_rest_time_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            3124),
    AVG_REST_TIME_TRICEPS_MV("avg-tbstc-25",
            R.string.avg_rest_time_title,
            R.string.triceps_mv_sub_title,
            R.string.avg_rest_time_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            3125),
    AVG_REST_TIME_FOREARMS_MV("avg-tbstc-26",
            R.string.avg_rest_time_title,
            R.string.forearms_mv_sub_title,
            R.string.avg_rest_time_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            3126),
    AVG_REST_TIME_CORE_MV("avg-tbstc-27",
            R.string.avg_rest_time_title,
            R.string.core_mv_sub_title,
            R.string.avg_rest_time_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            3127),
    AVG_REST_TIME_LOWER_BODY_MV("avg-tbstc-28",
            R.string.avg_rest_time_title,
            R.string.lower_body_mv_sub_title,
            R.string.avg_rest_time_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            3128),
    AVG_REST_TIME_QUADS_MV("avg-tbstc-29",
            R.string.avg_rest_time_title,
            R.string.quads_mv_sub_title,
            R.string.avg_rest_time_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            3129),
    AVG_REST_TIME_HAMS_MV("avg-tbstc-30",
            R.string.avg_rest_time_title,
            R.string.hamstrings_mv_sub_title,
            R.string.avg_rest_time_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            3130),
    AVG_REST_TIME_CALFS_MV("avg-tbstc-31",
            R.string.avg_rest_time_title,
            R.string.calfs_mv_sub_title,
            R.string.avg_rest_time_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            3131),
    AVG_REST_TIME_GLUTES_MV("avg-tbstc-32",
            R.string.avg_rest_time_title,
            R.string.glutes_mv_sub_title,
            R.string.avg_rest_time_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            3132),
    AVG_REST_TIME_HIP_ABDUCTORS_MV("avg-tbstc-33",
            R.string.avg_rest_time_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.avg_rest_time_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            3133),
    AVG_REST_TIME_HIP_FLEXORS_MV("avg-tbstc-34",
            R.string.avg_rest_time_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.avg_rest_time_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, "seconds"),
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            3134),
    /**
     * *********************************************************************************************
     * Distribution Rest Time Charts
     * *********************************************************************************************
     */
    DIST_TOTAL_REST_TIME_BODY_SEGMENTS("rdist-0",
            R.string.rest_time_dist_title,
            R.string.body_segments_sub_title,
            R.string.dist_rest_time_body_segments_info,
            chartRawData -> chartRawData.byBodySegment,
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID,
            R.id.bodySegmentsChartContainer,
            3200),
    DIST_TOTAL_REST_TIME_ALL_MGS("rdist-1",
            R.string.rest_time_dist_title,
            R.string.all_mgs_sub_title,
            R.string.dist_rest_time_all_mgs_info,
            chartRawData -> chartRawData.byMuscleGroup,
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            R.id.distContainer,
            R.id.allMgsChartContainer,
            3201),
    DIST_TOTAL_REST_TIME_UPPER_BODY("rdist-3", // in iOS, for impl reason, rdist-2 is used for the section heading view
            R.string.rest_time_dist_title,
            R.string.upper_body_sub_title,
            R.string.dist_rest_time_upper_body_info,
            chartRawData -> chartRawData.byUpperBodySegment,
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            3203),
    DIST_TOTAL_REST_TIME_SHOULDERS("rdist-4",
            R.string.rest_time_dist_title,
            R.string.shoulders_sub_title,
            R.string.dist_rest_time_shoulders_info,
            chartRawData -> chartRawData.byShoulderMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            3204),
    DIST_TOTAL_REST_TIME_CHEST("rdist-5",
            R.string.rest_time_dist_title,
            R.string.chest_sub_title,
            R.string.dist_rest_time_chest_info,
            chartRawData -> chartRawData.byChestMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            3205),
    DIST_TOTAL_REST_TIME_BACK("rdist-6",
            R.string.rest_time_dist_title,
            R.string.back_sub_title,
            R.string.dist_rest_time_back_info,
            chartRawData -> chartRawData.byBackMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            3206),
    DIST_TOTAL_REST_TIME_TRICEPS("rdist-7",
            R.string.rest_time_dist_title,
            R.string.triceps_sub_title,
            R.string.dist_rest_time_triceps_info,
            chartRawData -> chartRawData.byTricepsMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            3207),
    DIST_TOTAL_REST_TIME_CORE("tbsdpc-8",
            R.string.rest_time_dist_title,
            R.string.core_sub_title,
            R.string.dist_rest_time_core_info,
            chartRawData -> chartRawData.byCoreMg,
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            3208),
    DIST_TOTAL_REST_TIME_LOWER_BODY("tbsdpc-9",
            R.string.rest_time_dist_title,
            R.string.lower_body_sub_title,
            R.string.dist_rest_time_lower_body_info,
            chartRawData -> chartRawData.byLowerBodySegment,
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            3209),
    DIST_TOTAL_REST_TIME_ALL_MGS_MV("tbsdpc-11", // rdist-10 in iOS is used for the chart section
            R.string.rest_time_dist_title,
            R.string.all_mgs_mv_sub_title,
            R.string.dist_rest_time_all_mgs_mv_info,
            chartRawData -> chartRawData.byMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            3211),
    DIST_TOTAL_REST_TIME_UPPER_BODY_MV("tbsdpc-12",
            R.string.rest_time_dist_title,
            R.string.upper_body_mv_sub_title,
            R.string.dist_rest_time_upper_body_mv_info,
            chartRawData -> chartRawData.upperBodyByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            3212),
    DIST_TOTAL_REST_TIME_SHOULDERS_MV("tbsdpc-13",
            R.string.rest_time_dist_title,
            R.string.shoulders_mv_sub_title,
            R.string.dist_rest_time_shoulders_mv_info,
            chartRawData -> chartRawData.shoulderByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            3213),
    DIST_TOTAL_REST_TIME_CHEST_MV("tbsdpc-14",
            R.string.rest_time_dist_title,
            R.string.chest_mv_sub_title,
            R.string.dist_rest_time_chest_mv_info,
            chartRawData -> chartRawData.chestByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            3214),
    DIST_TOTAL_REST_TIME_BACK_MV("tbsdpc-15",
            R.string.rest_time_dist_title,
            R.string.back_mv_sub_title,
            R.string.dist_rest_time_back_mv_info,
            chartRawData -> chartRawData.backByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            3215),
    DIST_TOTAL_REST_TIME_BICEPS_MV("tbsdpc-16",
            R.string.rest_time_dist_title,
            R.string.biceps_mv_sub_title,
            R.string.dist_rest_time_biceps_mv_info,
            chartRawData -> chartRawData.bicepsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            3216),
    DIST_TOTAL_REST_TIME_TRICEPS_MV("tbsdpc-17",
            R.string.rest_time_dist_title,
            R.string.triceps_mv_sub_title,
            R.string.dist_rest_time_triceps_mv_info,
            chartRawData -> chartRawData.tricepsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            3217),
    DIST_TOTAL_REST_TIME_FOREARMS_MV("tbsdpc-18",
            R.string.rest_time_dist_title,
            R.string.forearms_mv_sub_title,
            R.string.dist_rest_time_forearms_mv_info,
            chartRawData -> chartRawData.forearmsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            3218),
    DIST_TOTAL_REST_TIME_CORE_MV("tbsdpc-19",
            R.string.rest_time_dist_title,
            R.string.core_mv_sub_title,
            R.string.dist_rest_time_core_mv_info,
            chartRawData -> chartRawData.coreByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            3219),
    DIST_TOTAL_REST_TIME_LOWER_BODY_MV("tbsdpc-20",
            R.string.rest_time_dist_title,
            R.string.lower_body_mv_sub_title,
            R.string.dist_rest_time_lower_body_mv_info,
            chartRawData -> chartRawData.lowerBodyByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            3220),
    DIST_TOTAL_REST_TIME_QUADS_MV("tbsdpc-21",
            R.string.rest_time_dist_title,
            R.string.quads_mv_sub_title,
            R.string.dist_rest_time_quads_mv_info,
            chartRawData -> chartRawData.quadsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            3221),
    DIST_TOTAL_REST_TIME_HAMS_MV("tbsdpc-22",
            R.string.rest_time_dist_title,
            R.string.hamstrings_mv_sub_title,
            R.string.dist_rest_time_hamstrings_mv_info,
            chartRawData -> chartRawData.hamstringsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            3222),
    DIST_TOTAL_REST_TIME_CALFS_MV("tbsdpc-23",
            R.string.rest_time_dist_title,
            R.string.calfs_mv_sub_title,
            R.string.dist_rest_time_calfs_mv_info,
            chartRawData -> chartRawData.calfsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            3223),
    DIST_TOTAL_REST_TIME_GLUTES_MV("tbsdpc-24",
            R.string.rest_time_dist_title,
            R.string.glutes_mv_sub_title,
            R.string.dist_rest_time_glutes_mv_info,
            chartRawData -> chartRawData.glutesByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            3224),
    DIST_TOTAL_REST_TIME_HIP_ABDUCTORS_MV("tbsdpc-25",
            R.string.rest_time_dist_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.dist_rest_time_hip_abductors_mv_info,
            chartRawData -> chartRawData.hipAbductorsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            3225),
    DIST_TOTAL_REST_TIME_HIP_FLEXORS_MV("tbsdpc-26",
            R.string.rest_time_dist_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.dist_rest_time_hip_flexors_mv_info,
            chartRawData -> chartRawData.hipFlexorsByMovementVariant,
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            3226),
    /**
     * *********************************************************************************************
     * Distribution / Time Rest Time Charts
     * *********************************************************************************************
     */
    DIST_TIME_REST_TIME_BODY_SEGMENTS("rdistt-1",
            R.string.rest_time_dist_title,
            R.string.body_segments_sub_title,
            R.string.dist_time_rest_time_body_segments_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.bodySegmentColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodySegmentsChartContainer,
            3301),
    DIST_TIME_REST_TIME_ALL_MGS("rdistt-2",
            R.string.rest_time_dist_title,
            R.string.all_mgs_sub_title,
            R.string.dist_time_rest_time_all_mgs_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMuscleGroupTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            R.id.distTimeContainer,
            R.id.allMgsChartContainer,
            3302),
    DIST_TIME_REST_TIME_UPPER_BODY("rdistt-4",
            R.string.rest_time_dist_title,
            R.string.upper_body_sub_title,
            R.string.dist_time_rest_time_upper_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byUpperBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsChartContainer,
            3304),
    DIST_TIME_REST_TIME_SHOULDERS("tbsdtc-5",
            R.string.rest_time_dist_title,
            R.string.shoulders_sub_title,
            R.string.dist_time_rest_time_shoulders_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byShoulderMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.SHOULDERS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersChartContainer,
            3305),
    DIST_TIME_REST_TIME_CHEST("tbsdtc-6",
            R.string.rest_time_dist_title,
            R.string.chest_sub_title,
            R.string.dist_time_rest_time_chest_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byChestMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CHEST.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestChartContainer,
            3306),
    DIST_TIME_REST_TIME_BACK("tbsdtc-7",
            R.string.rest_time_dist_title,
            R.string.back_sub_title,
            R.string.dist_time_rest_time_back_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byBackMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.BACK.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backChartContainer,
            3307),
    DIST_TIME_REST_TIME_TRICEPS("tbsdtc-9",
            R.string.rest_time_dist_title,
            R.string.triceps_sub_title,
            R.string.dist_time_rest_time_triceps_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byTricepsMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.TRICEPS.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsChartContainer,
            3309),
    DIST_TIME_REST_TIME_CORE("tbsdtc-11",
            R.string.rest_time_dist_title,
            R.string.core_sub_title,
            R.string.dist_time_rest_time_core_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byCoreMgTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.muscleGroupMuscleColors.get(MuscleGroup.Id.CORE.id),
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreChartContainer,
            3311),
    DIST_TIME_REST_TIME_LOWER_BODY("tbsdtc-12",
            R.string.rest_time_dist_title,
            R.string.lower_body_sub_title,
            R.string.dist_time_rest_time_lower_body_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byLowerBodySegmentTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.lowerBodyMuscleGroupColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsChartContainer,
            3312),
    DIST_TIME_REST_TIME_ALL_MGS_MV("tbsdtc-18",
            R.string.rest_time_dist_title,
            R.string.all_mgs_mv_sub_title,
            R.string.dist_time_rest_time_all_mgs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.byMovementVariantTimeSeries,
                    false,
                    true,
                    true),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.allMgsMvChartContainer,
            3318),
    DIST_TIME_REST_TIME_UPPER_BODY_MV("tbsdtc-19",
            R.string.rest_time_dist_title,
            R.string.upper_body_mv_sub_title,
            R.string.dist_time_rest_time_upper_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.upperBodyByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.upperBodyMgsMvChartContainer,
            3319),
    DIST_TIME_REST_TIME_SHOULDERS_MV("tbsdtc-20",
            R.string.rest_time_dist_title,
            R.string.shoulders_mv_sub_title,
            R.string.dist_time_rest_time_shoulders_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.shoulderByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.shouldersMvChartContainer,
            3320),
    DIST_TIME_REST_TIME_CHEST_MV("tbsdtc-21",
            R.string.rest_time_dist_title,
            R.string.chest_mv_sub_title,
            R.string.dist_time_rest_time_chest_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestMvChartContainer,
            3321),
    DIST_TIME_REST_TIME_BACK_MV("tbsdtc-22",
            R.string.rest_time_dist_title,
            R.string.back_mv_sub_title,
            R.string.dist_time_rest_time_back_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.backByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.backMvChartContainer,
            3322),
    DIST_TIME_REST_TIME_BICEPS_MV("tbsdtc-23",
            R.string.rest_time_dist_title,
            R.string.biceps_mv_sub_title,
            R.string.dist_time_rest_time_biceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bicepsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bicepsMvChartContainer,
            3323),
    DIST_TIME_REST_TIME_TRICEPS_MV("tbsdtc-24",
            R.string.rest_time_dist_title,
            R.string.triceps_mv_sub_title,
            R.string.dist_time_rest_time_triceps_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.tricepsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.tricepsMvChartContainer,
            3324),
    DIST_TIME_REST_TIME_FOREARMS_MV("tbsdtc-25",
            R.string.rest_time_dist_title,
            R.string.forearms_mv_sub_title,
            R.string.dist_time_rest_time_forearms_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmsMvChartContainer,
            3325),
    DIST_TIME_REST_TIME_CORE_MV("tbsdtc-26",
            R.string.rest_time_dist_title,
            R.string.core_mv_sub_title,
            R.string.dist_time_rest_time_core_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.coreByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.coreMvChartContainer,
            3326),
    DIST_TIME_REST_TIME_LOWER_BODY_MV("tbsdtc-27",
            R.string.rest_time_dist_title,
            R.string.lower_body_mv_sub_title,
            R.string.dist_time_rest_time_lower_body_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.lowerBodyByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.lowerBodyMgsMvChartContainer,
            3327),
    DIST_TIME_REST_TIME_QUADS_MV("tbsdtc-28",
            R.string.rest_time_dist_title,
            R.string.quads_mv_sub_title,
            R.string.dist_time_rest_time_quads_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.quadsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.quadsMvChartContainer,
            3328),
    DIST_TIME_REST_TIME_HAMS_MV("tbsdtc-29",
            R.string.rest_time_dist_title,
            R.string.hamstrings_mv_sub_title,
            R.string.dist_time_rest_time_hamstrings_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hamstringsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hamstringsMvChartContainer,
            3329),
    DIST_TIME_REST_TIME_CALFS_MV("tbsdtc-30",
            R.string.rest_time_dist_title,
            R.string.calfs_mv_sub_title,
            R.string.dist_time_rest_time_calfs_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfsMvChartContainer,
            3330),
    DIST_TIME_REST_TIME_GLUTES_MV("tbsdtc-31",
            R.string.rest_time_dist_title,
            R.string.glutes_mv_sub_title,
            R.string.dist_time_rest_time_glutes_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.glutesByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.glutesMvChartContainer,
            3331),
    DIST_TIME_REST_TIME_HIP_ABDUCTORS_MV("tbsdtc-32",
            R.string.rest_time_dist_title,
            R.string.hip_abductors_mv_sub_title,
            R.string.dist_time_rest_time_hip_abductors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipAbductorsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipAbductorsMvChartContainer,
            3332),
    DIST_TIME_REST_TIME_HIP_FLEXORS_MV("tbsdtc-33",
            R.string.rest_time_dist_title,
            R.string.hip_flexors_mv_sub_title,
            R.string.dist_time_rest_time_hip_flexors_mv_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.hipFlexorsByMovementVariantTimeSeries,
                    false,
                    true,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxDistributionValue,
            dataEntry -> dataEntry.distribution,
            null,
            resources -> Utils.floatValue(resources, R.dimen.normal_chart_line_width),
            maxValue -> new YAxisPercentageFormatter(),
            chartColorsContainer -> chartColorsContainer.movementVariantColors,
            (dao, user, since) -> dao.ascendingSets(user, since),
            (dao, user, since, end) -> dao.ascendingSets(user, since, end),
            maxyValue -> BigDecimal.valueOf(1.05f),
            BigDecimal.ZERO,
            ChartConfig.Category.REST_TIME,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.hipFlexorsMvChartContainer,
            3333),
// -------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------

    /**
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     *    Body Composition Charts
     * *********************************************************************************************
     * *********************************************************************************************
     * *********************************************************************************************
     */

    /**
     * *********************************************************************************************
     * Average charts
     * *********************************************************************************************
     */
    AVG_BODY_WEIGHT("body-bw-0",
            R.string.body_weight_title,
            NO_RES_ID,
            R.string.body_weight_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.bodyWeightTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, WeightUnit.weightUnitById(userSettings.weightUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.bodyWeightColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.BODY_WEIGHT, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.BODY_WEIGHT, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.bodyWeightContainer,
            4000),
    AVG_ARM_SIZE("body-as-0",
            R.string.arm_size_title,
            NO_RES_ID,
            R.string.arm_size_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.armSizeTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, SizeUnit.sizeUnitById(userSettings.sizeUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.armSizeColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.ARM_SIZE, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.ARM_SIZE, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.armSizeContainer,
            4001),
    AVG_CHEST_SIZE("body-cs-0",
            R.string.chest_size_title,
            NO_RES_ID,
            R.string.chest_size_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.chestSizeTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, SizeUnit.sizeUnitById(userSettings.sizeUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.chestSizeColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.CHEST_SIZE, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.CHEST_SIZE, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.chestSizeContainer,
            4002),
    AVG_CALF_SIZE("body-calfs-0",
            R.string.calfs_size_title,
            NO_RES_ID,
            R.string.calfs_size_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.calfSizeTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, SizeUnit.sizeUnitById(userSettings.sizeUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.calfSizeColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.CALF_SIZE, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.CALF_SIZE, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.calfSizeContainer,
            4003),
    AVG_THIGH_SIZE("body-ts-0",
            R.string.thigh_size_title,
            NO_RES_ID,
            R.string.thigh_size_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.thighSizeTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, SizeUnit.sizeUnitById(userSettings.sizeUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.thighSizeColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.THIGH_SIZE, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.THIGH_SIZE, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.thighSizeContainer,
            4004),
    AVG_FOREARM_SIZE("body-fs-0",
            R.string.forearm_size_title,
            NO_RES_ID,
            R.string.forearm_size_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.forearmSizeTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, SizeUnit.sizeUnitById(userSettings.sizeUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.forearmSizeColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.FOREARM_SIZE, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.FOREARM_SIZE, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.forearmSizeContainer,
            4005),
    AVG_WAIST_SIZE("body-ws-0",
            R.string.waist_size_title,
            NO_RES_ID,
            R.string.waist_size_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.waistSizeTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, SizeUnit.sizeUnitById(userSettings.sizeUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.waistSizeColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.WAIST_SIZE, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.WAIST_SIZE, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.waistSizeContainer,
            4006),
    AVG_NECK_SIZE("body-ns-0",
            R.string.neck_size_title,
            NO_RES_ID,
            R.string.neck_size_chart_info,
            (chartStrengthRawData, aggregateBy) -> ChartUtils.normalizeUsingGroupInterval(aggregateBy.val,
                    chartStrengthRawData.startDate,
                    chartStrengthRawData.endDate,
                    chartStrengthRawData.neckSizeTimeSeries,
                    true,
                    false,
                    false),
            normalizedTimeSeriesTupleCollection -> normalizedTimeSeriesTupleCollection.maxAvgAggregateValue,
            dataEntry -> dataEntry.avgAggregateValue,
            (userSettings, max) -> YAxisLabelText.valueForMaxValue(max, SizeUnit.sizeUnitById(userSettings.sizeUom).name),
            resources -> Utils.floatValue(resources, R.dimen.thicker_chart_line_width),
            maxValue -> new YAxisNumberFormatter(ChartUtils.yaxisScalingFactor(maxValue)),
            chartColorsContainer -> chartColorsContainer.neckSizeColors,
            (dao, user, since) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.NECK_SIZE, since),
            (dao, user, since, end) -> dao.ascendingBmlsWithNonNilColumn(user, BmlColumn.NECK_SIZE, since, end),
            maxyValue -> maxyValue.multiply(BigDecimal.valueOf(1.05f)),
            null,
            ChartConfig.Category.BODY,
            NO_RES_ID, // this chart is not displayed on any dashboard screens
            R.id.neckSizeContainer,
            4007)
    ;

    public final String id;
    public final boolean isPie;
    public final @StringRes int titleResId;
    public final @StringRes int subTitleResId;
    public final @StringRes int infoResId;
    public final Function.PieSliceMaker pieSliceMaker;
    public final Function.NormalizedTimeSeriesCollectionMaker normalizedTimeSeriesCollectionMaker;
    public final Function.MaxValueMaker maxValueMaker;
    public final Function.YValueMaker yvalueMaker;
    public final Function.YAxisValueLabelMaker yAxisValueLabelMaker;
    public final Function.LineWidthFn lineWidthFn;
    public final Function.YAxisValueFormatterMaker yaxisValueFormatterMaker;
    public final Function.ChartColorsFn chartColorsFn;
    public final Function.AscendingEntitiesFn ascendingEntitiesFn;
    public final Function.BoundedAscendingEntitiesFn boundedAscendingEntitiesFn;
    public final Function.YAxisMaximumFn yaxisMaximumFn;
    public final BigDecimal yaxisMinimum;
    public final ChartConfig.Category category;
    @IdRes public final int chartDashboardContainerResId;
    @IdRes public final int chartListContainerResId;
    public final int loaderId;

    Chart(final String id,
          final @StringRes int titleResId,
          final @StringRes int subTitleResId,
          final @StringRes int infoResId,
          final Function.PieSliceMaker pieSliceMaker,
          final Function.ChartColorsFn chartColorsFn,
          final Function.AscendingEntitiesFn ascendingEntitiesFn,
          final Function.BoundedAscendingEntitiesFn boundedAscendingEntitiesFn,
          final ChartConfig.Category category,
          @IdRes final int chartDashboardContainerResId,
          @IdRes final int chartListContainerResId,
          final int loaderId) {
        this(id,
                true,
                titleResId,
                subTitleResId,
                infoResId,
                pieSliceMaker,
                null,
                null,
                null,
                null,
                null,
                null,
                chartColorsFn,
                ascendingEntitiesFn,
                boundedAscendingEntitiesFn,
                null,
                null,
                category,
                chartDashboardContainerResId,
                chartListContainerResId,
                loaderId);
    }

    Chart(final String id,
          final @StringRes int titleResId,
          final @StringRes int subTitleResId,
          final @StringRes int infoResId,
          final Function.NormalizedTimeSeriesCollectionMaker normalizedTimeSeriesCollectionMaker,
          final Function.MaxValueMaker maxValueMaker,
          final Function.YValueMaker yvalueMaker,
          final Function.YAxisValueLabelMaker yAxisValueLabelMaker,
          final Function.LineWidthFn lineWidthFn,
          final Function.YAxisValueFormatterMaker yaxisValueFormatterMaker,
          final Function.ChartColorsFn chartColorsFn,
          final Function.AscendingEntitiesFn ascendingEntitiesFn,
          final Function.BoundedAscendingEntitiesFn boundedAscendingEntitiesFn,
          final Function.YAxisMaximumFn yaxisMaximumFn,
          final BigDecimal yaxisMinimum,
          final ChartConfig.Category category,
          @IdRes final int chartDashboardContainerResId,
          @IdRes final int chartListContainerResId,
          final int loaderId) {
        this(id,
                false,
                titleResId,
                subTitleResId,
                infoResId,
                null,
                normalizedTimeSeriesCollectionMaker,
                maxValueMaker,
                yvalueMaker,
                yAxisValueLabelMaker,
                lineWidthFn,
                yaxisValueFormatterMaker,
                chartColorsFn,
                ascendingEntitiesFn,
                boundedAscendingEntitiesFn,
                yaxisMaximumFn,
                yaxisMinimum,
                category,
                chartDashboardContainerResId,
                chartListContainerResId,
                loaderId);
    }

    Chart(final String id,
          final boolean isPie,
          final @StringRes int titleResId,
          final @StringRes int subTitleResId,
          final @StringRes int infoResId,
          final Function.PieSliceMaker pieSliceMaker,
          final Function.NormalizedTimeSeriesCollectionMaker normalizedTimeSeriesCollectionMaker,
          final Function.MaxValueMaker maxValueMaker,
          final Function.YValueMaker yvalueMaker,
          final Function.YAxisValueLabelMaker yAxisValueLabelMaker,
          final Function.LineWidthFn lineWidthFn,
          final Function.YAxisValueFormatterMaker yaxisValueFormatterMaker,
          final Function.ChartColorsFn chartColorsFn,
          final Function.AscendingEntitiesFn ascendingEntitiesFn,
          final Function.BoundedAscendingEntitiesFn boundedAscendingEntitiesFn,
          final Function.YAxisMaximumFn yaxisMaximumFn,
          final BigDecimal yaxisMinimum,
          final ChartConfig.Category category,
          @IdRes final int chartDashboardContainerResId,
          @IdRes final int chartListContainerResId,
          final int loaderId) {
        this.id = id;
        this.isPie = isPie;
        this.titleResId = titleResId;
        this.subTitleResId = subTitleResId;
        this.infoResId = infoResId;
        this.pieSliceMaker = pieSliceMaker;
        this.normalizedTimeSeriesCollectionMaker = normalizedTimeSeriesCollectionMaker;
        this.maxValueMaker = maxValueMaker;
        this.yvalueMaker = yvalueMaker;
        this.yAxisValueLabelMaker = yAxisValueLabelMaker;
        this.lineWidthFn = lineWidthFn;
        this.yaxisValueFormatterMaker = yaxisValueFormatterMaker;
        this.chartColorsFn = chartColorsFn;
        this.ascendingEntitiesFn = ascendingEntitiesFn;
        this.boundedAscendingEntitiesFn = boundedAscendingEntitiesFn;
        this.yaxisMaximumFn = yaxisMaximumFn;
        this.yaxisMinimum = yaxisMinimum;
        this.category = category;
        this.chartDashboardContainerResId = chartDashboardContainerResId;
        this.chartListContainerResId = chartListContainerResId;
        this.loaderId = loaderId;
    }

    public static final Chart[] chartsByCategory(final ChartConfig.Category category) {
        final List<Chart> charts = new ArrayList<>();
        final Chart allCharts[] = Chart.values();
        for (final Chart chart : allCharts) {
            if (chart.category.equals(category)) {
                charts.add(chart);
            }
        }
        return charts.toArray(new Chart[charts.size()]);
    }

    public static final Chart chartByLoaderId(final int loaderId) {
        final Chart allCharts[] = Chart.values();
        for (final Chart chart : allCharts) {
            if (chart.loaderId == loaderId) {
                return chart;
            }
        }
        return null;
    }
}
